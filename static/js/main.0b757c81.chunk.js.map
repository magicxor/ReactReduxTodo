{"version":3,"sources":["store/taskList/reducer.js","store/taskList/actionTypes.js","components/NavMenu.js","store/taskList/actions.js","components/Task.js","store/taskList/selectors.js","components/TaskList.js","components/About.js","components/Home.js","registerServiceWorker.js","services/initialStateGenerator.js","index.js","store/configureStore.js","App.js"],"names":["initialState","newTaskDescription","tasks","reducer","state","action","type","taskDescription","id","taskId","description","filter","item","library","add","faHome","faTasks","faInfoCircle","NavMenu","props","Navbar","bg","className","Brand","Toggle","aria-controls","Collapse","Nav","class","Link","as","NavLink","to","exact","icon","actionCreators","setNewTaskDescription","addTask","deleteTask","Task","connect","data","Button","variant","onClick","getTasks","taskList","getNewTaskDescription","TaskList","TaskListSelectors","InputGroup","FormControl","placeholder","value","onChange","e","target","Append","idArray","map","task","Array","isArray","length","Math","max","apply","scope","key","About","Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","initialStateGenerator","baseUrl","document","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","store","reducers","middleware","thunk","routerMiddleware","enhancers","rootReducer","combineReducers","router","connectRouter","createStore","compose","applyMiddleware","ConfigureStore","initialReduxState","getInitialState","rootElement","getElementById","ReactDOM","render","Container","fluid","Row","Col","sm","Switch","Route","path","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","ServiceWorker"],"mappings":"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","file":"static/js/main.0b757c81.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\r\n\r\nconst initialState = {\r\n    newTaskDescription: \"\",\r\n    tasks: []\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n    state = state || initialState;\r\n    switch (action.type) {\r\n        case actionTypes.SET_NEW_TASK_DESCRIPTION:\r\n            return { ...state, newTaskDescription: action.taskDescription };\r\n        case actionTypes.ADD_TASK:\r\n            return { ...state, tasks: [...state.tasks, { id: action.taskId, description: action.taskDescription }] };\r\n        case actionTypes.DELETE_TASK:\r\n            return { ...state, tasks: state.tasks.filter(item => item.id !== action.taskId) };\r\n        default:\r\n            return state;\r\n    }\r\n};","export const SET_NEW_TASK_DESCRIPTION = 'taskList.SET_NEW_TASK_DESCRIPTION';\r\nexport const ADD_TASK = 'taskList.ADD_TASK';\r\nexport const DELETE_TASK = 'taskList.DELETE_TASK';","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faHome, faTasks, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faHome, faTasks, faInfoCircle);\r\n\r\nexport const NavMenu = props => (\r\n  <Navbar bg=\"light\" className=\"flex-column\">\r\n    <Navbar.Brand>ReactReduxTodo</Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav class=\"navbar-nav flex-column\">\r\n        <Nav.Link as={NavLink} to=\"/\" exact><FontAwesomeIcon icon='home' /> Home</Nav.Link>\r\n        <Nav.Link as={NavLink} to=\"/TaskList\" exact><FontAwesomeIcon icon='tasks' /> Task list</Nav.Link>\r\n        <Nav.Link as={NavLink} to=\"/About\" exact><FontAwesomeIcon icon='info-circle' /> About</Nav.Link>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n);\r\n","import * as types from './actionTypes';\r\n\r\nexport function setNewTaskDescription(taskDescription) {\r\n    return {\r\n        type: types.SET_NEW_TASK_DESCRIPTION,\r\n        taskDescription: taskDescription\r\n    };\r\n}\r\n\r\nexport function addTask(taskId, taskDescription) {\r\n    return {\r\n        type: types.ADD_TASK,\r\n        taskId: taskId,\r\n        taskDescription: taskDescription\r\n    };\r\n}\r\n\r\nexport function deleteTask(taskId) {\r\n    return {\r\n        type: types.DELETE_TASK,\r\n        taskId: taskId\r\n    };\r\n}\r\n\r\nexport const actionCreators = {\r\n    setNewTaskDescription,\r\n    addTask,\r\n    deleteTask\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\nimport { actionCreators } from '../store/taskList/actions';\r\n\r\nconst TaskRaw = props => (\r\n  <tr>\r\n    <td>\r\n      {props.data.id}\r\n    </td>\r\n    <td>\r\n      {props.data.description}\r\n    </td>\r\n    <td>\r\n      <Button variant=\"danger\" onClick={() => props.deleteTask(props.data.id)}>Delete</Button>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport const Task = connect(null, actionCreators)(TaskRaw);\r\n","export function getTasks(state) {\r\n    return state.taskList.tasks;\r\n}\r\n\r\nexport function getNewTaskDescription(state) {\r\n    return state.taskList.newTaskDescription;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FormControl, InputGroup, Button } from 'react-bootstrap';\r\nimport { Task } from './Task';\r\nimport * as TaskListSelectors from '../store/taskList/selectors';\r\nimport { actionCreators } from '../store/taskList/actions';\r\n\r\nfunction getNextId(idArray) {\r\n  if (!Array.isArray(idArray) || idArray.length === 0) {\r\n    return 0;\r\n  }\r\n  return Math.max.apply(Math, idArray) + 1;\r\n}\r\n\r\nconst TaskListRaw = props => (\r\n  <div>\r\n    <h1>Tasks</h1>\r\n\r\n    <InputGroup className=\"mb-3\">\r\n      <FormControl placeholder=\"Task description\" value={props.newTaskDescription} onChange={(e) => props.setNewTaskDescription(e.target.value)} />\r\n      <InputGroup.Append>\r\n        <Button variant=\"outline-primary\" onClick={() => props.addTask(getNextId(props.tasks.map(task => task.id)), props.newTaskDescription)}>Add</Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n\r\n    <table className=\"table table-hover table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col-md-2\">ID</th>\r\n          <th scope=\"col-md-5\">Description</th>\r\n          <th scope=\"col-md-5\">#</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          props.tasks.map(task => {\r\n            return <Task key={task.id} data={task} />;\r\n          })\r\n        }\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    tasks: TaskListSelectors.getTasks(state),\r\n    newTaskDescription: TaskListSelectors.getNewTaskDescription(state)\r\n  };\r\n}\r\n\r\nexport const TaskList = connect(mapStateToProps, actionCreators)(TaskListRaw);\r\n","import React from 'react';\r\n\r\nexport const About = props => (\r\n    <div>\r\n      <h1>About ReactReduxTodo</h1>\r\n      <p>\r\n        MIT License<br/><br/>\r\n\r\n        Copyright (c) 2018 Ilia Burakov<br/><br/>\r\n\r\n        Permission is hereby granted, free of charge, to any person obtaining a copy\r\n        of this software and associated documentation files (the \"Software\"), to deal\r\n        in the Software without restriction, including without limitation the rights\r\n        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n        copies of the Software, and to permit persons to whom the Software is\r\n        furnished to do so, subject to the following conditions:<br/><br/>\r\n\r\n        The above copyright notice and this permission notice shall be included in all\r\n        copies or substantial portions of the Software.<br/><br/>\r\n\r\n        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n        SOFTWARE.         \r\n      </p>\r\n    </div>\r\n  );","import React from 'react';\r\n\r\nexport const Home = props => (\r\n  <div>\r\n    <h1>ReactReduxTodo</h1>\r\n    <p>Hello world react/redux app</p>    \r\n  </div>\r\n);","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","class InitialStateGenerator {\r\n  getInitialState() {\r\n    return {\r\n      taskList: {\r\n        newTaskDescription: \"New task\",\r\n        tasks: [\r\n          { id: 0, description: \"Sleep\" },\r\n          { id: 1, description: \"Breakfast\" },\r\n          { id: 2, description: \"Workout\" },\r\n          { id: 3, description: \"Dinner\" }\r\n        ]\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nexport const initialStateGenerator = new InitialStateGenerator();","import 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport * as ConfigureStore from './store/configureStore';\r\nimport { App } from './App';\r\nimport * as ServiceWorker from './registerServiceWorker';\r\nimport { initialStateGenerator } from './services/initialStateGenerator';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// FontAwesome - import and add an icon to the Library\r\nlibrary.add(faHome);\r\n\r\n// Create browser history to use in the Redux store\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst history = createBrowserHistory({ basename: baseUrl });\r\n\r\n// Get the application-wide store instance, prepopulating with state from the server where available.\r\nconst initialState = window.initialReduxState || initialStateGenerator.getInitialState();\r\nconst store = ConfigureStore.configureStore(history, initialState);\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <App />\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  rootElement);\r\n\r\nServiceWorker.register();\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport * as TaskList from './taskList/reducer';\r\n\r\nexport function configureStore(history, initialState) {\r\n  const reducers = {\r\n    taskList: TaskList.reducer\r\n  };\r\n\r\n  const middleware = [\r\n    thunk,\r\n    routerMiddleware(history)\r\n  ];\r\n\r\n  // In development, use the browser's Redux dev tools extension if installed\r\n  const enhancers = [];\r\n  const isDevelopment = process.env.NODE_ENV === 'development';\r\n  if (isDevelopment && typeof window !== 'undefined' && window.devToolsExtension) {\r\n    enhancers.push(window.devToolsExtension());\r\n  }\r\n\r\n  const rootReducer = combineReducers({\r\n    router: connectRouter(history),\r\n    ...reducers\r\n  });\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware), ...enhancers)\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport { NavMenu } from './components/NavMenu';\r\nimport { TaskList } from './components/TaskList';\r\nimport { About } from './components/About';\r\nimport { Home } from './components/Home';\r\n\r\nexport const App = () => (\r\n  <Container fluid>\r\n    <Row>\r\n      <Col sm={3}>\r\n        <NavMenu />\r\n      </Col>\r\n      <Col sm={9}>\r\n        <Switch>\r\n          <Route exact path='/TaskList'>\r\n            <TaskList />\r\n          </Route>\r\n          <Route exact path='/About'>\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n"],"sourceRoot":""}